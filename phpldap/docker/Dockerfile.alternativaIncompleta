# ./Docker/Dockerfile
#DockerBuild
#docker build -t phpldap -f ./docker/Dockerfile .
#docker run -p 8080:80 --name apacheteste phpldap


# Base image
FROM ubuntu:bionic

# Instalação dos pré-requisitos
RUN apt update
ENV TZ 'America/Sao_Paulo'
RUN echo $TZ > /etc/timezone && \
  apt-get update && apt-get install -y tzdata && \
  rm /etc/localtime && \
  ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
  dpkg-reconfigure -f noninteractive tzdata && \
  apt-get clean
RUN apt install -y apache2 php libapache2-mod-php php-mysql php-ldap && apt clean

RUN apt install -y php-bz2 php-curl php-fileinfo php-gettext php-gmp php-intl php-imap php-ldap php-mbstring php-exif  php-mysqli php-pdo-mysql php-pdo-sqlite php-soap php-sockets php-sqlite3 php-xmlrpc php-xsl && apt clean

ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_RUN_DIR /var/run/apache2
ENV APACHE_PID_FILE /var/run/apache2/apache2.pid
ENV APACHE_LOCK_DIR /var/lock

# Enable Apache ldap auth module
RUN a2enmod authnz_ldap

# Enable Apache Rewrite
RUN a2enmod rewrite

# Enaple php7.2
RUN a2dismod php7.2
RUN a2enmod php7.2

# Convenient working directory
WORKDIR /var/www/html

# Configure apache to use the ldap configuration defined above
#COPY docker/.htaccess ./.htaccess

# Copy the project files we need (we'll be creating this in step 3)
#COPY ../index.php ./

COPY docker/php.ini /etc/php/7.2/apache2/

RUN echo 'Hello, docker' > /var/www/html/index.html

CMD ["/usr/sbin/apache2","-D", "FOREGROUND"]

